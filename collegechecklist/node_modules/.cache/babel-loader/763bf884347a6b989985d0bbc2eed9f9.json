{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/irenabrain/Documents/GitHub/CollegeChecklist/collegechecklist/src/Components/Layout/MainContent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useTasks } from \"../../Hooks\";\nimport { CheckBox } from \"../Checkbox\";\nimport { SelectedCollegeProviderValue } from \"../../Context\";\nimport { AddTask } from \"../AddTask\";\nexport const MainContent = () => {\n  _s();\n\n  const {\n    selectedCollege,\n    selectedCollegeName\n  } = SelectedCollegeProviderValue();\n  const {\n    tasks,\n    archivedTasks\n  } = useTasks(selectedCollege);\n  const [showArchived, setShowArchived] = useState(false);\n\n  const importedTasks = () => {\n    let collegeName = selectedCollegeName;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [collegeName, \" hello\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tasks-list\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n              id: task.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", task.task, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n          value: selectedCollege\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archivedTasks\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          onClick: () => {\n            setShowArchived(!showArchived);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `arrow  ${showArchived ? \"rotate\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-chevron-down fa-sm \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Archived Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `archived ${showArchived ? \"show-archived\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"archived-list\",\n            children: archivedTasks.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", item.task]\n            }, item.task, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: importedTasks()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n\n_s(MainContent, \"PJuVAPEq/CrA/WICK2LwoitJmvs=\", false, function () {\n  return [useTasks];\n});\n\n_c = MainContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"sources":["/Users/irenabrain/Documents/GitHub/CollegeChecklist/collegechecklist/src/Components/Layout/MainContent.jsx"],"names":["React","useState","useEffect","useTasks","CheckBox","SelectedCollegeProviderValue","AddTask","MainContent","selectedCollege","selectedCollegeName","tasks","archivedTasks","showArchived","setShowArchived","importedTasks","collegeName","map","task","id","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,4BAAT,QAA6C,eAA7C;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA;AAFI,MAIFJ,4BAA4B,EAJhC;AAKA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2BR,QAAQ,CAACK,eAAD,CAAzC;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMa,aAAa,GAAG,MAAM;AAC1B,QAAIC,WAAW,GAAGN,mBAAlB;AAEA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA,qBAAKM,WAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACGL,KAAK,CAACM,GAAN,CAAUC,IAAI,iBACb;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,EAAE,EAAEA,IAAI,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,8BAAQD,IAAI,CAACA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAASA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEV;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,OADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbK,YAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,WAJH;AAAA,kCAME;AAAM,YAAA,SAAS,EAAG,UAASA,YAAY,GAAG,QAAH,GAAc,EAAG,EAAxD;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AAAK,UAAA,SAAS,EAAG,YAAWA,YAAY,GAAG,eAAH,GAAqB,EAAG,EAAhE;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBACGD,aAAa,CAACK,GAAd,CAAkBG,IAAI,iBACrB;AAAA,8BAAsBA,IAAI,CAACF,IAA3B;AAAA,eAASE,IAAI,CAACF,IAAd;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA,oBADF;AAsCD,GAzCD;;AA0CA,sBAAO;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cAA+BH,aAAa;AAA5C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApDM;;GAAMP,W;UAMsBJ,Q;;;KANtBI,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useTasks } from \"../../Hooks\";\nimport { CheckBox } from \"../Checkbox\";\nimport { SelectedCollegeProviderValue } from \"../../Context\";\nimport { AddTask } from \"../AddTask\";\n\nexport const MainContent = () => {\n  const {\n    selectedCollege,\n    selectedCollegeName\n    \n  } = SelectedCollegeProviderValue();\n  const { tasks, archivedTasks } = useTasks(selectedCollege);\n  const [showArchived, setShowArchived] = useState(false);\n\n  const importedTasks = () => {\n    let collegeName = selectedCollegeName;\n\n    return (\n      <>\n        <div className=\"tasks\">\n          <h2>{collegeName} hello</h2>\n          <ul className=\"tasks-list\">\n            {tasks.map(task => (\n              <li key={task.id}>\n                <CheckBox id={task.id} />\n                <span> {task.task} </span>\n              </li>\n            ))}\n          </ul>\n          <AddTask value={selectedCollege} />\n        </div>\n        <hr />\n        <div className=\"archivedTasks\">\n          <div\n            className=\"title\"\n            onClick={() => {\n              setShowArchived(!showArchived);\n            }}\n          >\n            <span className={`arrow  ${showArchived ? \"rotate\" : \"\"}`}>\n              <i className=\"fas fa-chevron-down fa-sm \"></i>\n            </span>\n            <span>Archived Tasks</span>\n          </div>\n\n          <div className={`archived ${showArchived ? \"show-archived\" : \"\"}`}>\n            <div className=\"archived-list\">\n              {archivedTasks.map(item => (\n                <li key={item.task}> {item.task}</li>\n              ))}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  };\n  return <div className=\"main-content\">{importedTasks()}</div>;\n};"]},"metadata":{},"sourceType":"module"}